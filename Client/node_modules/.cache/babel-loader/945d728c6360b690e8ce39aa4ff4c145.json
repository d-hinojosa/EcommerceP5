{"ast":null,"code":"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\"; // instantiate axios\n\nconst httpClient = axios.create();\n\nhttpClient.getToken = function () {\n  return localStorage.getItem(\"token\");\n};\n\nhttpClient.setToken = function (token) {\n  localStorage.setItem(\"token\", token);\n  return token;\n};\n\nhttpClient.getCurrentUser = function () {\n  const token = this.getToken();\n  if (token) return jwtDecode(token);\n  return null;\n};\n\nhttpClient.logIn = function (credentials) {\n  return this({\n    method: \"post\",\n    url: \"/api/users/authenticate\",\n    data: credentials\n  }).then(serverResponse => {\n    const token = serverResponse.data.token;\n\n    if (token) {\n      // sets token as an included header for all subsequent api requests\n      this.defaults.headers.common.token = this.setToken(token);\n      return jwtDecode(token);\n    } else {\n      return false;\n    }\n  });\n}; // SignUp function - if someone attempts to signup a second time, will return false\n\n\nhttpClient.signUp = function (userInfo) {\n  return this({\n    method: \"post\",\n    url: \"/api/users\",\n    data: userInfo\n  }).then(serverResponse => {\n    const token = serverResponse.data.token;\n\n    if (token) {\n      // sets token as an included header for all subsequent api requests\n      console.log(\"signup\");\n      console.log(this.defaults);\n      this.defaults.headers.common.token = this.setToken(token);\n      console.log(this.defaults);\n      return jwtDecode(token);\n    } else {\n      return false;\n    }\n  });\n};\n\nhttpClient.logOut = function () {\n  localStorage.removeItem(\"token\");\n  delete this.defaults.headers.common.token;\n  return true;\n}; // During initial app load attempt to set a localStorage stored token\n// as a default header for all api requests.\n\n\nhttpClient.defaults.headers.common.token = httpClient.getToken();\nexport default httpClient;","map":{"version":3,"sources":["/Users/biridianahinojosa/Documents/EProject5/Client/src/httpClient.js"],"names":["axios","jwtDecode","httpClient","create","getToken","localStorage","getItem","setToken","token","setItem","getCurrentUser","logIn","credentials","method","url","data","then","serverResponse","defaults","headers","common","signUp","userInfo","console","log","logOut","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,EAAnB;;AACAD,UAAU,CAACE,QAAX,GAAsB,YAAW;AAC/B,SAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD,CAFD;;AAGAJ,UAAU,CAACK,QAAX,GAAsB,UAASC,KAAT,EAAgB;AACpCH,EAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BD,KAA9B;AACA,SAAOA,KAAP;AACD,CAHD;;AAIAN,UAAU,CAACQ,cAAX,GAA4B,YAAW;AACrC,QAAMF,KAAK,GAAG,KAAKJ,QAAL,EAAd;AACA,MAAII,KAAJ,EAAW,OAAOP,SAAS,CAACO,KAAD,CAAhB;AACX,SAAO,IAAP;AACD,CAJD;;AAKAN,UAAU,CAACS,KAAX,GAAmB,UAASC,WAAT,EAAsB;AACvC,SAAO,KAAK;AACVC,IAAAA,MAAM,EAAE,MADE;AAEVC,IAAAA,GAAG,EAAE,yBAFK;AAGVC,IAAAA,IAAI,EAAEH;AAHI,GAAL,EAIJI,IAJI,CAICC,cAAc,IAAI;AACxB,UAAMT,KAAK,GAAGS,cAAc,CAACF,IAAf,CAAoBP,KAAlC;;AACA,QAAIA,KAAJ,EAAW;AACT;AACA,WAAKU,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6BZ,KAA7B,GAAqC,KAAKD,QAAL,CAAcC,KAAd,CAArC;AACA,aAAOP,SAAS,CAACO,KAAD,CAAhB;AACD,KAJD,MAIO;AACL,aAAO,KAAP;AACD;AACF,GAbM,CAAP;AAcD,CAfD,C,CAgBA;;;AACAN,UAAU,CAACmB,MAAX,GAAoB,UAASC,QAAT,EAAmB;AACrC,SAAO,KAAK;AAAET,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,GAAG,EAAE,YAAvB;AAAqCC,IAAAA,IAAI,EAAEO;AAA3C,GAAL,EAA4DN,IAA5D,CACLC,cAAc,IAAI;AAChB,UAAMT,KAAK,GAAGS,cAAc,CAACF,IAAf,CAAoBP,KAAlC;;AACA,QAAIA,KAAJ,EAAW;AACT;AACAe,MAAAA,OAAO,CAACC,GAAR;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,QAAjB;AACA,WAAKA,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6BZ,KAA7B,GAAqC,KAAKD,QAAL,CAAcC,KAAd,CAArC;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,QAAjB;AACA,aAAOjB,SAAS,CAACO,KAAD,CAAhB;AACD,KAPD,MAOO;AACL,aAAO,KAAP;AACD;AACF,GAbI,CAAP;AAeD,CAhBD;;AAiBAN,UAAU,CAACuB,MAAX,GAAoB,YAAW;AAC7BpB,EAAAA,YAAY,CAACqB,UAAb,CAAwB,OAAxB;AACA,SAAO,KAAKR,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6BZ,KAApC;AACA,SAAO,IAAP;AACD,CAJD,C,CAKA;AACA;;;AACAN,UAAU,CAACgB,QAAX,CAAoBC,OAApB,CAA4BC,MAA5B,CAAmCZ,KAAnC,GAA2CN,UAAU,CAACE,QAAX,EAA3C;AACA,eAAeF,UAAf","sourcesContent":["import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n// instantiate axios\nconst httpClient = axios.create();\nhttpClient.getToken = function() {\n  return localStorage.getItem(\"token\");\n};\nhttpClient.setToken = function(token) {\n  localStorage.setItem(\"token\", token);\n  return token;\n};\nhttpClient.getCurrentUser = function() {\n  const token = this.getToken();\n  if (token) return jwtDecode(token);\n  return null;\n};\nhttpClient.logIn = function(credentials) {\n  return this({\n    method: \"post\",\n    url: \"/api/users/authenticate\",\n    data: credentials\n  }).then(serverResponse => {\n    const token = serverResponse.data.token;\n    if (token) {\n      // sets token as an included header for all subsequent api requests\n      this.defaults.headers.common.token = this.setToken(token);\n      return jwtDecode(token);\n    } else {\n      return false;\n    }\n  });\n};\n// SignUp function - if someone attempts to signup a second time, will return false\nhttpClient.signUp = function(userInfo) {\n  return this({ method: \"post\", url: \"/api/users\", data: userInfo }).then(\n    serverResponse => {\n      const token = serverResponse.data.token;\n      if (token) {\n        // sets token as an included header for all subsequent api requests\n        console.log(`signup`);\n        console.log(this.defaults);\n        this.defaults.headers.common.token = this.setToken(token);\n        console.log(this.defaults);\n        return jwtDecode(token);\n      } else {\n        return false;\n      }\n    }\n  );\n};\nhttpClient.logOut = function() {\n  localStorage.removeItem(\"token\");\n  delete this.defaults.headers.common.token;\n  return true;\n};\n// During initial app load attempt to set a localStorage stored token\n// as a default header for all api requests.\nhttpClient.defaults.headers.common.token = httpClient.getToken();\nexport default httpClient;"]},"metadata":{},"sourceType":"module"}